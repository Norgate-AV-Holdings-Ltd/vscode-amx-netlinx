{
    "Data_Event Codeblock":{
        "prefix": "DATA_EVENT",
        "body": [
            "DATA_EVENT[${1:device}]",
            "{",
            "\tONLINE:",
            "\t{",
            "\t\t$0",
            "\t}",
            "\tOFFLINE: { }",
            "\tCOMMAND: { }",
            "\tSTRING:",
            "\t{",
            "\t\t",
            "\t}",
            "}"
        ],
        "description": "Basic DATA_EVENT block"
    },
    "Channel_Event Codeblock":{
        "prefix": "channel_event",
        "body": [
            "CHANNEL_EVENT[${1:device},${2:channel}]",
            "{",
            "\tON:",
            "\t{",
            "\t\t$0",
            "\t}",
            "\tOFF:",
            "\t{",
            "\t\t",
            "\t}",
            "}"
        ],
        "description": "Basic CHANNEL_EVENT block"
    },
    "Level_Event Codeblock":{
        "prefix": "level_event",
        "body": [
            "LEVEL_EVENT[${1:device},${2:level}]",
            "{",
            "\tSTACK_VAR INTEGER nLevel",
            "\tnLevel = LEVEL.VALUE",
            "\t",
            "\t$0",
            "}"
        ],
        "description": "Basic LEVEL_EVENT block"
    },
    "Timeline_Event Codeblock":{
        "prefix": "timeline_event",
        "body": [
            "TIMELINE_EVENT[${1:timeline}]",
            "{",
            "\t$0",
            "}"
        ],
        "description": "Basic TIMELINE_EVENT block"
    },
    "Button Event Codeblock":{
        "prefix": "button_event",
        "body": [
            "BUTTON_EVENT[${1:device},${2:channel}]",
            "{",
            "\tPUSH:",
            "\t{",
            "\t\t$0",
            "\t}",
            "}"
        ],
        "description": "Basic BUTTON_EVENT block with PUSH"
    },
    "Hold Event Codeblock":{
        "prefix": "hold",
        "body": [
            "HOLD[${1:time}${2:,REPEAT}]:",
            "{",
            "\t$0",
            "}"
        ],
        "description": "Basic HOLD event block"
    },
    "Release Event Codeblock":{
        "prefix": "release",
        "body": [
            "RELEASE:",
            "{",
            "\t$0",
            "}"
        ],
        "description": "Basic RELEASE event block"
    },
    "For Loop Codeblock":{
        "prefix": "for",
        "body": [
            "FOR (${1:var} == ${2:start}; ${1:var} <= ${3:end}; ${1:var}++)",
            "{",
            "\t$0",
            "}"
        ],
        "description": "Basic FOR loop block"
    },
    "If Codeblock":{
        "prefix": "if",
        "body": [
            "IF (${1:conditional})",
            "{",
            "\t$0",
            "}"
        ],
        "description": "IF conditional block"
    },
    "Else Codeblock":{
        "prefix": "else",
        "body": [
            "ELSE",
            "{",
            "\t$0",
            "}"
        ],
        "description": "ELSE code block"
    },
    "Else If Codeblock":{
        "prefix": "else if",
        "body": [
            "ELSE IF (${1:conditional})",
            "{",
            "\t$0",
            "}"
        ],
        "description": "ELSE IF conditional block"
    },
    "While Codeblock":{
        "prefix": "while",
        "body": [
            "WHILE (${1:conditional})",
            "{",
            "\t$0",
            "}"
        ],
        "description": "WHILE conditional block"
    },
    "Switch Codeblock":{
        "prefix": "switch",
        "body": [
            "SWITCH (${1:variable})",
            "{",
            "\tCASE ${2:value}:",
            "\t{",
            "\t\t$0",
            "\t}",
            "}"
        ],
        "description": "SWITCH conditional block"
    },
    "Case Codeblock":{
        "prefix": "case",
        "body": [
            "CASE ${2:value}:",
            "{",
            "\t$0",
            "}"
        ],
        "description": "CASE conditional block"
    },
    "Select Codeblock":{
        "prefix": "select",
        "body": [
            "SELECT",
            "{",
            "\tACTIVE (${1:conditional}):",
            "\t{",
            "\t\t$0",
            "\t}",
            "}"
        ],
        "description": "SELECT conditional block"
    },
    "Active Codeblock":{
        "prefix": "active",
        "body": [
            "ACTIVE (${2:value}):",
            "{",
            "\t$0",
            "}"
        ],
        "description": "ACTIVE conditional block"
    },
    "Define_Function Codeblock":{
        "prefix": "define_function",
        "body": [
            "DEFINE_FUNCTION ${1:return_type} ${2:function_name} (${3:parameters})",
            "{",
            "\t$0",
            "}"
        ],
        "description": "DEFINE_FUNCTION code block"
    },
    "Get_Last Function":{
        "prefix": "get_last",
        "body": "GET_LAST(${1:array})\n$0",
        "description": "Get_Last() function call"
    },
    "Length_Array Function":{
        "prefix": "length_array",
        "body": "LENGTH_ARRAY(${1:var})",
        "description": "Length_Array() function call"
    },
    "Max_Length_Array Function":{
        "prefix": "max_length_array",
        "body": "MAX_LENGTH_ARRAY(${1:var})",
        "description": "Max_Length_Array() function call"
    },
    "Length_String Function":{
        "prefix": "length_string",
        "body": "LENGTH_STRING(${1:var})",
        "description": "Length_String() function call"
    },
    "Find_String Function":{
        "prefix": "find_string",
        "body": "FIND_STRING(${1:haystack},${2:needle},${3:startpos})",
        "description": "Find_String() function call"
    },
    "Remove_String Function":{
        "prefix": "remove_string",
        "body": "REMOVE_STRING(${1:haystack},${2:needle},${3:startpos})",
        "description": "Length_Array() function call"
    },
    "Mid_String Function":{
        "prefix": "mid_string",
        "body": "MID_STRING(${1:var},${2:startpos},${3:endpos})",
        "description": "Mid_String() function call"
    },
    "Local_Var Declaration":{
        "prefix": "local_var",
        "body": "LOCAL_VAR $0",
        "description": "Local_Var context declaration"
    },
    "Stack_Var Declaration":{
        "prefix": "stack_var",
        "body": "STACK_VAR $0",
        "description": "Stack_Var context declaration"
    },
    "Send_Command Declaration":{
        "prefix": "send_command",
        "body": "SEND_COMMAND $0",
        "description": "Send_Command context declaration"
    },
    "Send_String Declaration":{
        "prefix": "send_string",
        "body": "SEND_STRING $0",
        "description": "Send_String context declaration"
    }

}